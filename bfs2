from collections import deque

def lire_graphe(fichier):
    with open(fichier, 'r') as f:
        lignes = f.readlines()
        
    # Nombre de sommets
    n = int(lignes[0].strip())
    
    # Noms des sommets
    noms = lignes[1].strip().split()
    
    # Matrice d'adjacence
    matrice = []
    for i in range(2, 2 + n):
        matrice.append(list(map(int, lignes[i].strip().split())))
    
    return n, noms, matrice

def bfs(graphe, sommet_depart):
    n, noms, matrice = graphe
    visite = [False] * n
    file = deque([sommet_depart])
    visite[sommet_depart] = True
    ordre = []
    
    while file:
        sommet = file.popleft()
        ordre.append(noms[sommet])
        
        # Ajouter les voisins non visitÃ©s
        for voisin in range(n):
            if matrice[sommet][voisin] > 0 and not visite[voisin]:
                file.append(voisin)
                visite[voisin] = True
    
    return ordre

# Charger le graphe
fichier = "votre_fichier.txt"  # Remplacez par le chemin de votre fichier texte
graphe = lire_graphe(fichier)

# Effectuer le BFS depuis le sommet 0 (Microflores_du_sol)
resultat = bfs(graphe, 0)
print("Ordre du parcours BFS :", resultat)
