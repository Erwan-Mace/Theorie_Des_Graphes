#include <stdio.h>
#include <limits.h>

#define MAX 100
#define INF INT_MAX

void dijkstra(int graph[MAX][MAX], int n, int start) {
    int dist[MAX], vis[MAX], prev[MAX];
    for (int i = 0; i < n; i++) {
        dist[i] = INF;
        vis[i] = 0;
        prev[i] = -1;
    }

    dist[start] = 0;

    for (int i = 0; i < n - 1; i++) {
        int min = INF, u;
        for (int j = 0; j < n; j++) {
            if (!vis[j] && dist[j] < min) {
                min = dist[j];
                u = j;
            }
        }

        vis[u] = 1;

        for (int v = 0; v < n; v++) {
            if (!vis[v] && graph[u][v] && dist[u] != INF &&
                dist[u] + graph[u][v] < dist[v]) {
                dist[v] = dist[u] + graph[u][v];
                prev[v] = u;
            }
        }
    }

    printf("Noeud \tDistance \tChemin\n");
    for (int i = 0; i < n; i++) {
        printf("%d \t%d \t\t", i, dist[i]);
        int j = i;
        while (j != -1) {
            printf("%d ", j);
            j = prev[j];
        }
        printf("\n");
    }
}

int main() {
    int graph[MAX][MAX], n, start;

    printf("Nombre de sommets: ");
    scanf("%d", &n);

    printf("Matrice d'adjacence (%dx%d):\n", n, n);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    printf("Noeud de dÃ©part: ");
    scanf("%d", &start);

    dijkstra(graph, n, start);

    return 0;
}
